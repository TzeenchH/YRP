{"version":3,"sources":["./src/app.module.ts","./src/app.component.ts","./src/app/Dashboard/dashboard.component.ts","./src/app/Dashboard/dashboard.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACG;AAEe;AAC1B;;;AAE/C,MAAM,SAAS,GAAW;IACtB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qFAAkB,EAAC;CAC5C;AASM,MAAM,SAAS;;wFAAT,SAAS;4IAAT,SAAS,mBAHP,EAAE,YAFL,CAAC,uEAAa,EAAE,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAC9C,4DAAY;mIAIb,SAAS,mBANF,2DAAY,EAAE,qFAAkB,aACvC,uEAAa,EAAE,yEACd,4DAAY;6FAIb,SAAS;cAPrB,sDAAQ;eAAC;gBACN,YAAY,EAAE,CAAE,2DAAY,EAAE,qFAAkB,CAAC;gBACjD,OAAO,EAAC,CAAC,uEAAa,EAAE,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;gBACxD,OAAO,EAAE,CAAC,4DAAY,CAAC;gBACvB,SAAS,EAAE,EAAE;aAChB;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAA0C;;;AAUnC,MAAM,YAAY;;wEAAZ,YAAY;4FAAZ,YAAY;QANV,sEACX;QAAA,qEAAI;QAAA,2JAA0B;QAAA,4DAAK;QACnC,2EAA+B;QACnC,4DAAM;;6FAGO,YAAY;cARxB,uDAAS;eAAC;gBACP,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE;;;OAGP;aACN;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,kBAAkB;;oFAAlB,kBAAkB;kGAAlB,kBAAkB;QCP/B,sEACI;QAAA,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QACtB,4DAAM;;6FDKO,kBAAkB;cAL9B,uDAAS;eAAC;gBACP,QAAQ,EAAE,0BAA0B;gBACpC,WAAW,EAAE,0BAA0B;aAC1C;;;;;;;;;;;;;;AELD;AAAA;AAAA;AAA2E;AAClC;AAEzC,MAAM,QAAQ,GAAG,gGAAsB,EAAE,CAAC;AAC1C,QAAQ,CAAC,eAAe,CAAC,qDAAS,CAAC,CAAC;;;;;;;;;;;;ACJpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { DashboardComponent } from './app/Dashboard/dashboard.component';\r\nimport { AppComponent } from './app.component';\r\n\r\nconst appRoutes: Routes = [\r\n    {path: '', component: DashboardComponent}\r\n]\r\n\r\n@NgModule({\r\n    declarations: [ AppComponent, DashboardComponent],\r\n    imports:[BrowserModule, RouterModule.forRoot(appRoutes)],\r\n    exports: [RouterModule],\r\n    providers: [],\r\n})\r\n\r\nexport class AppModule {}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: \"my-app\",\r\n    template: `<div>\r\n    <h1>Маршрутизация в Angular 11</h1>\r\n    <router-outlet></router-outlet>\r\n</div>`\r\n})\r\n\r\nexport class AppComponent {} ","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: \"dashboard.component.scss\",\r\n    templateUrl: 'dashboard.component.html'\r\n})\r\n\r\nexport class DashboardComponent {}","<div>\r\n    <h1>ITS WORK!</h1>\r\n</div>","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app.module';\r\n\r\nconst platform = platformBrowserDynamic();\r\nplatform.bootstrapModule(AppModule);","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}